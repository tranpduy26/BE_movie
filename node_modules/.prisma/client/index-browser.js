
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  detectRuntime,
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.10.2
 * Query Engine version: 5a9203d0590c951969e85a7d07215503f4672eb9
 */
Prisma.prismaVersion = {
  client: "5.10.2",
  engine: "5a9203d0590c951969e85a7d07215503f4672eb9"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.BannerScalarFieldEnum = {
  ma_banner: 'ma_banner',
  ma_phim: 'ma_phim',
  hinh_anh: 'hinh_anh'
};

exports.Prisma.CumRapScalarFieldEnum = {
  ma_cum_rap: 'ma_cum_rap',
  ten_cum_rap: 'ten_cum_rap',
  dia_chi: 'dia_chi',
  ma_he_thong_rap: 'ma_he_thong_rap'
};

exports.Prisma.DatVeScalarFieldEnum = {
  tai_khoan: 'tai_khoan',
  ma_lich_chieu: 'ma_lich_chieu',
  ma_ghe: 'ma_ghe'
};

exports.Prisma.GheScalarFieldEnum = {
  ma_ghe: 'ma_ghe',
  ten_ghe: 'ten_ghe',
  loai_ghe: 'loai_ghe',
  ma_rap: 'ma_rap'
};

exports.Prisma.HeThongRapScalarFieldEnum = {
  ma_he_thong_rap: 'ma_he_thong_rap',
  ten_he_thong_rap: 'ten_he_thong_rap',
  logo: 'logo'
};

exports.Prisma.LichChieuScalarFieldEnum = {
  ma_lich_chieu: 'ma_lich_chieu',
  ma_rap: 'ma_rap',
  ma_phim: 'ma_phim',
  ngay_gio_chieu: 'ngay_gio_chieu',
  gia_ve: 'gia_ve'
};

exports.Prisma.NguoiDungScalarFieldEnum = {
  tai_khoan: 'tai_khoan',
  ho_ten: 'ho_ten',
  email: 'email',
  so_dt: 'so_dt',
  mat_khau: 'mat_khau',
  loai_nguoi_dung: 'loai_nguoi_dung'
};

exports.Prisma.PhimScalarFieldEnum = {
  ma_phim: 'ma_phim',
  ten_phim: 'ten_phim',
  trailer: 'trailer',
  hinh_anh: 'hinh_anh',
  mo_ta: 'mo_ta',
  ngay_khoi_chieu: 'ngay_khoi_chieu',
  danh_gia: 'danh_gia',
  hot: 'hot',
  dang_chieu: 'dang_chieu',
  sap_chieu: 'sap_chieu'
};

exports.Prisma.RapPhimScalarFieldEnum = {
  ma_rap: 'ma_rap',
  ten_rap: 'ten_rap',
  ma_cum_rap: 'ma_cum_rap'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Banner: 'Banner',
  CumRap: 'CumRap',
  DatVe: 'DatVe',
  Ghe: 'Ghe',
  HeThongRap: 'HeThongRap',
  LichChieu: 'LichChieu',
  NguoiDung: 'NguoiDung',
  Phim: 'Phim',
  RapPhim: 'RapPhim'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        const runtime = detectRuntime()
        const edgeRuntimeName = {
          'workerd': 'Cloudflare Workers',
          'deno': 'Deno and Deno Deploy',
          'netlify': 'Netlify Edge Functions',
          'edge-light': 'Vercel Edge Functions or Edge Middleware',
        }[runtime]

        let message = 'PrismaClient is unable to run in '
        if (edgeRuntimeName !== undefined) {
          message += edgeRuntimeName + '. As an alternative, try Accelerate: https://pris.ly/d/accelerate.'
        } else {
          message += 'this browser environment, or has been bundled for the browser (running in `' + runtime + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
